rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    match /products/{productID}{
      allow read;

      match /offers/{offerID}{
        allow read;
      }
    }

    match /baskets/{userID}{
      allow get: if request.auth.uid == userID;
      allow write: if request.auth.uid == userID && isValidTimestamp(request.resource.data.updated);

      match /products/{productID}{
        allow read: if request.auth.uid == userID;
        allow write: if request.auth.uid == userID 
        && request.resource.data.productID == productID
        && isValidBasketItem(request.resource.data);
      }
    }

    // helper functions
    function isValidTimestamp(timestampValue){
      return request.time == timestampValue;
    }

    function isValidBasketItem(data){
      return isValidTimestamp(data.timestamp) && isProductExists(data.productID) && data.count > 0;
    }

    function isProductExists(productID){
      return exists(/databases/$(database)/documents/products/$(productID));
    }
  }
}